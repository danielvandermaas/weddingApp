{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Projecten/weddingApp/src/components/Fotoboek.js\";\nimport React, { Component } from 'react';\n\nclass Fotoboek extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      'messages': ''\n    };\n\n    this.getFeed = async () => {\n      let messageInfo = await fetch('https://api.ellipsis-earth.com/v2/geomessage/ids', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.token\n        },\n        body: JSON.stringify({\n          'mapId': this.props.mapId,\n          'type': 'polygon',\n          'filters': {\n            'polygonIds': [15]\n          }\n        })\n      });\n      messageInfo = await messageInfo.json();\n      let messageIds = messageInfo.messages.map(x => {\n        return x.id;\n      });\n      let messages = await fetch('https://api.ellipsis-earth.com/v2/geomessage/get', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.token\n        },\n        body: JSON.stringify({\n          'mapId': this.props.mapId,\n          'type': 'polygon',\n          'messageIds': messageIds\n        })\n      });\n      messages = await messages.json();\n      return messages;\n    };\n\n    this.getMessage = async () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Print\",\n      onClick: this.getFeed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Ga naar de tuin\",\n      onClick: this.props.setOnScreen.bind(this, ['menu', 'tuin', 'chat']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 3\n      }\n    }));\n  }\n\n}\n\nexport default Fotoboek;","map":{"version":3,"sources":["/home/daniel/Projecten/weddingApp/src/components/Fotoboek.js"],"names":["React","Component","Fotoboek","state","getFeed","messageInfo","fetch","method","headers","props","token","body","JSON","stringify","mapId","json","messageIds","messages","map","x","id","getMessage","render","setOnScreen","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAEjCE,KAFiC,GAEzB;AAAC,kBAAW;AAAZ,KAFyB;;AAAA,SAI/BC,OAJ+B,GAIrB,YAAW;AACjB,UAAIC,WAAW,GAAG,MAAMC,KAAK,CAAC,kDAAD,EAAoD;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAiBC,QAAAA,OAAO,EAAE;AAAC,0BAAgB,kBAAjB;AAAqC,2BAAiB,KAAKC,KAAL,CAAWC;AAAjE,SAA1B;AAAmGC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAAC,mBAAQ,KAAKJ,KAAL,CAAWK,KAApB;AAA2B,kBAAQ,SAAnC;AAA8C,qBAAU;AAAE,0BAAa,CAAC,EAAD;AAAf;AAAxD,SAAf;AAAxG,OAApD,CAA7B;AACAT,MAAAA,WAAW,GAAG,MAAMA,WAAW,CAACU,IAAZ,EAApB;AACA,UAAIC,UAAU,GAAGX,WAAW,CAACY,QAAZ,CAAqBC,GAArB,CAA0BC,CAAD,IAAM;AAAC,eAAOA,CAAC,CAACC,EAAT;AAAa,OAA7C,CAAjB;AACA,UAAIH,QAAQ,GAAG,MAAMX,KAAK,CAAC,kDAAD,EAAoD;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAiBC,QAAAA,OAAO,EAAE;AAAC,0BAAgB,kBAAjB;AAAqC,2BAAiB,KAAKC,KAAL,CAAWC;AAAjE,SAA1B;AAAmGC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAAC,mBAAQ,KAAKJ,KAAL,CAAWK,KAApB;AAA2B,kBAAQ,SAAnC;AAA8C,wBAAcE;AAA5D,SAAf;AAAxG,OAApD,CAA1B;AACAC,MAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACF,IAAT,EAAjB;AACA,aAAOE,QAAP;AACD,KAX4B;;AAAA,SAajCI,UAbiC,GAapB,YAAW,CAEvB,CAfgC;AAAA;;AAiBjCC,EAAAA,MAAM,GAAE;AAAG,wBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,OAA5B;AAAoC,MAAA,OAAO,EAAI,KAAKlB,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE,iBAA5B;AAA8C,MAAA,OAAO,EAAI,KAAKK,KAAL,CAAWc,WAAX,CAAuBC,IAAvB,CAA4B,IAA5B,EAAiC,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAAjC,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADS;AAOV;;AAxBgC;;AA0BjC,eAAetB,QAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Fotoboek extends Component {\n\nstate = {'messages':''}\n\n  getFeed = async () =>{\n      let messageInfo = await fetch('https://api.ellipsis-earth.com/v2/geomessage/ids',{method:'POST',  headers: {'Content-Type': 'application/json', 'Authorization': this.props.token}, body:JSON.stringify({'mapId':this.props.mapId, 'type': 'polygon', 'filters':{ 'polygonIds':[15]}})});\n      messageInfo = await messageInfo.json();\n      let messageIds = messageInfo.messages.map((x) =>{return(x.id)})\n      let messages = await fetch('https://api.ellipsis-earth.com/v2/geomessage/get',{method:'POST',  headers: {'Content-Type': 'application/json', 'Authorization': this.props.token}, body:JSON.stringify({'mapId':this.props.mapId, 'type': 'polygon', 'messageIds': messageIds })})\n      messages = await messages.json()\n      return(messages)\n    }\n\ngetMessage = async () =>{\n\n}\n\nrender(){  return (\n  <div>\n  <input type=\"button\" value= \"Print\" onClick = {this.getFeed}/>\n  <input type=\"button\" value= \"Ga naar de tuin\" onClick = {this.props.setOnScreen.bind(this,['menu','tuin','chat'])} />\n  </div>\n\n  );\n}\n}\nexport default Fotoboek;\n"]},"metadata":{},"sourceType":"module"}