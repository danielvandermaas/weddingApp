{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Projecten/weddingApp/src/components/Tuin.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, Pane, Marker, Popup, Circle, GeoJSON } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nclass Tuin extends Component {\n  constructor(props) {\n    super(props);\n    this.leafletMap = null;\n\n    this.getMarkers = async layer => {\n      let body = {\n        'mapId': this.props.mapId,\n        'layer': layer,\n        'type': 'polygon'\n      };\n      let ids = await fetch('https://api.ellipsis-earth.com/v2/geometry/ids', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.token\n        },\n        body: JSON.stringify(body)\n      });\n      ids = await ids.json();\n      ids = ids.ids;\n      body = {\n        'mapId': this.props.mapId,\n        'elementIds': ids,\n        'type': 'polygon'\n      };\n      let geojson = await fetch('https://api.ellipsis-earth.com/v2/geometry/get', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.token\n        },\n        body: JSON.stringify(body)\n      });\n      geojson = await geojson.json();\n      let geoJsonElements = geojson.features.map(feature => {\n        console.log(feature.geometry.coordinates);\n        return /*#__PURE__*/React.createElement(Pane, {\n          style: {\n            zIndex: 250\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Marker, {\n          map: this.refs.map,\n          position: feature.geometry.coordinates,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Popup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 12\n          }\n        }, \"A pretty CSS3 popup. \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 39\n          }\n        }), \" Easily customizable.\"))));\n        this.setState({\n          ceremonie: geoJsonElements\n        });\n      });\n\n      if (layer == 'ceremonie') {\n        this.setState({\n          ceremonie: geoJsonElements\n        });\n      }\n    };\n\n    this.flyToPos = (pos, zoom = 18) => {\n      let leafletElement = this.leafletMap.current.leafletElement;\n      leafletElement.flyTo(pos, zoom, {\n        'duration': 6\n      });\n    };\n\n    this.checkState = () => {\n      console.log(this.state);\n    };\n\n    this.leafletMap = React.createRef();\n    this.state = {\n      'ceremonie': []\n    };\n  }\n\n  componentDidMount() {\n    this.flyToPos([51.98126, 5.82501]);\n    this.getMarkers('ceremonie');\n  }\n\n  render() {\n    let fullStyle = {\n      height: '1000px',\n      width: '1000px'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: fullStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"check state\",\n      onClick: this.checkState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Map, {\n      center: [52.05249, 5.53711],\n      zoom: 6,\n      style: fullStyle,\n      ref: this.leafletMap,\n      maxNativeZoom: 21,\n      maxZoom: 21,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Pane, {\n      style: {\n        'zIndex': 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://www.google.com/maps/vt?lyrs=y@189&x={x}&y={y}&z={z}\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Pane, {\n      style: {\n        'zIndex': 150\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://www.google.com/maps/vt?lyrs=y@189&x={x}&y={y}&z={z}\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Pane, {\n      style: {\n        zIndex: 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, this.state.ceremonie), /*#__PURE__*/React.createElement(Pane, {\n      style: {\n        zIndex: 250\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      map: this.refs.map,\n      position: [52.05249, 5.53711],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 14\n      }\n    }, \"A pretty CSS3 popup. \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    }), \" Easily customizable.\"))))));\n  }\n\n}\n\n;\nexport default Tuin;","map":{"version":3,"sources":["/home/daniel/Projecten/weddingApp/src/components/Tuin.js"],"names":["React","Component","Map","TileLayer","Pane","Marker","Popup","Circle","GeoJSON","L","Tuin","constructor","props","leafletMap","getMarkers","layer","body","mapId","ids","fetch","method","headers","token","JSON","stringify","json","geojson","geoJsonElements","features","map","feature","console","log","geometry","coordinates","zIndex","refs","setState","ceremonie","flyToPos","pos","zoom","leafletElement","current","flyTo","checkState","state","createRef","componentDidMount","render","fullStyle","height","width"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n  Map,\n  TileLayer,\n  Pane,\n  Marker,\n  Popup,\n  Circle,\n  GeoJSON\n} from 'react-leaflet';\nimport L from 'leaflet'\nimport 'leaflet/dist/leaflet.css';\n\n\nclass Tuin extends Component {\n\n  leafletMap = null\n\n  constructor(props) {\n    super(props);\n\n    this.leafletMap = React.createRef();\n\n    this.state = {'ceremonie':[]}\n\n  }\n\n  componentDidMount() {\n  this.flyToPos([51.98126,5.82501])\n  this.getMarkers('ceremonie')\n  }\n\ngetMarkers= async (layer) =>{\n  let body = {'mapId':this.props.mapId, 'layer':layer, 'type':'polygon'}\n  let ids = await fetch('https://api.ellipsis-earth.com/v2/geometry/ids',{method:'POST',  headers: {'Content-Type': 'application/json', 'Authorization': this.props.token}, body:JSON.stringify(body)});\n  ids = await ids.json()\n  ids = ids.ids\n  body = {'mapId':this.props.mapId, 'elementIds':ids, 'type':'polygon'}\n  let geojson = await fetch('https://api.ellipsis-earth.com/v2/geometry/get',{method:'POST',  headers: {'Content-Type': 'application/json', 'Authorization': this.props.token}, body:JSON.stringify(body)});\n  geojson = await geojson.json()\n\n  let geoJsonElements = geojson.features.map((feature) => {\n    console.log(feature.geometry.coordinates)\n    return (\n      <Pane style={{zIndex:250}}>\n      <Marker map={this.refs.map} position={feature.geometry.coordinates} >\n         <Popup>\n           <span>A pretty CSS3 popup. <br /> Easily customizable.</span>\n         </Popup>\n       </Marker>\n       </Pane>\n    );\n    this.setState({ceremonie:geoJsonElements})\n  });\n\n\n  if(layer == 'ceremonie'){\n    this.setState({ceremonie:geoJsonElements})\n  }\n\n}\n\n  flyToPos = (pos, zoom = 18) => {\n    let leafletElement = this.leafletMap.current.leafletElement\n    leafletElement.flyTo(pos, zoom, {'duration':6});\n  }\n\ncheckState = () => {\n  console.log(this.state)\n}\n\n  render(){\n    let fullStyle = { height: '1000px', width: '1000px' };\n\n    return(\n      <div style = {fullStyle}>\n      <input type='button' value = 'check state' onClick={this.checkState}/>\n      <Map center={[52.05249,5.53711]} zoom={6} style={fullStyle} ref={this.leafletMap} maxNativeZoom={21} maxZoom={21}>\n      <Pane style = {{'zIndex':100}}>\n        <TileLayer\n          url='https://www.google.com/maps/vt?lyrs=y@189&x={x}&y={y}&z={z}'\n        />\n        </Pane>\n        <Pane style = {{'zIndex':150}}>\n          <TileLayer\n          url='https://www.google.com/maps/vt?lyrs=y@189&x={x}&y={y}&z={z}'\n          />\n          </Pane>\n        <Pane style={{ zIndex: 200 }}>\n          {this.state.ceremonie}\n        </Pane>\n        <Pane style={{zIndex:250}}>\n        <Marker map={this.refs.map} position={[52.05249,5.53711]} >\n           <Popup>\n             <span>A pretty CSS3 popup. <br /> Easily customizable.</span>\n           </Popup>\n         </Marker>\n         </Pane>\n         {}\n        </Map>\n      </div>\n    )\n  }\n\n};\nexport default Tuin;\n"]},"metadata":{},"sourceType":"module"}