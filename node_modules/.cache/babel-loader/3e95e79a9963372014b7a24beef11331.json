{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Projecten/weddingApp/src/components/Gastenboek.js\";\nimport React, { Component } from 'react';\nimport SubmitMessage from './SubmitMessage';\n\nclass Gastenboek extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      'time': 2,\n      'messages': [{\n        'form': {\n          'answers': [{\n            'anwser': ''\n          }, {\n            'anwser': ''\n          }]\n        }\n      }]\n    };\n\n    this.getFeed = async () => {\n      let messageInfo = await fetch('https://api.ellipsis-earth.com/v2/geomessage/ids', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.token\n        },\n        body: JSON.stringify({\n          'mapId': this.props.mapId,\n          'type': 'polygon',\n          'limit': 30,\n          'filters': {\n            'polygonIds': [14]\n          }\n        })\n      });\n      messageInfo = await messageInfo.json();\n      let messageIds = messageInfo.messages.map(x => {\n        return x.id;\n      });\n      let messages = await fetch('https://api.ellipsis-earth.com/v2/geomessage/get', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.token\n        },\n        body: JSON.stringify({\n          'mapId': this.props.mapId,\n          'type': 'polygon',\n          'messageIds': messageIds\n        })\n      });\n      messages = await messages.json();\n      this.setState({\n        messages: messages\n      });\n      console.log(messages);\n    };\n\n    this.showPhoto = async imageId => {\n      this.props.addOnScreen('foto');\n      this.props.setImageId(imageId);\n    };\n  }\n\n  componentDidMount() {\n    this.getFeed();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, \" Gastenboek \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Ga terug naar de tuin\",\n      onClick: this.props.setOnScreen.bind(this, ['menu', 'tuin', 'chat']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(SubmitMessage, {\n      mapId: this.props.mapId,\n      token: this.props.token,\n      getFeed: this.getFeed,\n      name: this.props.name,\n      type: \"gastenboek\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, this.state.messages.map(function (message, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, \" \", message.form.answers[0].answer), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, message.form.answers[1].answer), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.showPhoto.bind(this, message.image),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: message.thumbnail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }))));\n    })));\n  }\n\n}\n\nexport default Gastenboek;","map":{"version":3,"sources":["/home/daniel/Projecten/weddingApp/src/components/Gastenboek.js"],"names":["React","Component","SubmitMessage","Gastenboek","state","getFeed","messageInfo","fetch","method","headers","props","token","body","JSON","stringify","mapId","json","messageIds","messages","map","x","id","setState","console","log","showPhoto","imageId","addOnScreen","setImageId","componentDidMount","componentWillUnmount","clearInterval","interval","render","setOnScreen","bind","name","message","index","form","answers","answer","image","thumbnail"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport SubmitMessage from './SubmitMessage'\n\nclass Gastenboek extends Component {\n\n  state = {'time':2, 'messages':[{'form': {'answers':[{'anwser':''}, {'anwser':''}]} }]}\n\n  componentDidMount() {\n    this.getFeed()\n\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n  getFeed = async () =>{\n      let messageInfo = await fetch('https://api.ellipsis-earth.com/v2/geomessage/ids',{method:'POST',  headers: {'Content-Type': 'application/json', 'Authorization': this.props.token}, body:JSON.stringify({'mapId':this.props.mapId, 'type': 'polygon', 'limit':30, 'filters':{ 'polygonIds':[14]}})});\n      messageInfo = await messageInfo.json();\n      let messageIds = messageInfo.messages.map((x) =>{return(x.id)})\n      let messages = await fetch('https://api.ellipsis-earth.com/v2/geomessage/get',{method:'POST',  headers: {'Content-Type': 'application/json', 'Authorization': this.props.token}, body:JSON.stringify({'mapId':this.props.mapId, 'type': 'polygon', 'messageIds': messageIds })})\n      messages = await messages.json()\n      this.setState({messages:messages})\n      console.log(messages)\n    }\n\n  showPhoto = async (imageId) => {\n    this.props.addOnScreen('foto')\n    this.props.setImageId(imageId)\n    }\n\n\n  render(){\n    return (\n      <div>\n      <h1> Gastenboek </h1>\n      <input type=\"button\" value= \"Ga terug naar de tuin\" onClick = {this.props.setOnScreen.bind(this,['menu','tuin','chat'])} />\n      <SubmitMessage mapId = {this.props.mapId} token = {this.props.token} getFeed = {this.getFeed} name = {this.props.name} type = 'gastenboek'/>\n      <ul>{\n      this.state.messages.map(function(message, index){\n          return(\n            <div>\n            <li>\n                  <p> {message.form.answers[0].answer}</p>\n                  <p>{message.form.answers[1].answer}</p>\n                  <a onClick = {this.showPhoto.bind(this, message.image)}>\n                  <img src = {message.thumbnail}/>\n                  </a>\n                  </li>\n              </div>\n          )\n        })\n      }</ul>\n      </div>\n    );\n  }\n  }\nexport default Gastenboek;\n"]},"metadata":{},"sourceType":"module"}