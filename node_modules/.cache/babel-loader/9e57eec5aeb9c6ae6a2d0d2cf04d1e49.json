{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Projecten/weddingApp/src/components/Fotoboek.js\";\nimport React, { Component } from 'react';\n\nclass Fotoboek extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      'messages': ['x']\n    };\n\n    this.getFeed = async () => {\n      let messageInfo = await fetch('https://api.ellipsis-earth.com/v2/geomessage/ids', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.token\n        },\n        body: JSON.stringify({\n          'mapId': this.props.mapId,\n          'type': 'polygon',\n          'filters': {\n            'polygonIds': [15]\n          }\n        })\n      });\n      messageInfo = await messageInfo.json();\n      let messageIds = messageInfo.messages.map(x => {\n        return x.id;\n      });\n      let messages = await fetch('https://api.ellipsis-earth.com/v2/geomessage/get', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.token\n        },\n        body: JSON.stringify({\n          'mapId': this.props.mapId,\n          'type': 'polygon',\n          'messageIds': messageIds\n        })\n      });\n      messages = await messages.json();\n      return messages;\n    };\n\n    this.checkState = () => {\n      console.log(this.state);\n    };\n  }\n\n  componentDidMount(props) {\n    this.getFeed().then(messages => {\n      this.setState({\n        messages: messages\n      });\n      console.log(messages);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, this.state.messages.map(function (message, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \" \", message.message), /*#__PURE__*/React.createElement(\"img\", {\n        src: message.thumbnail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Print state\",\n      onClick: this.checkState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Ga naar de tuin\",\n      onClick: this.props.setOnScreen.bind(this, ['menu', 'tuin', 'chat']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default Fotoboek;","map":{"version":3,"sources":["/home/daniel/Projecten/weddingApp/src/components/Fotoboek.js"],"names":["React","Component","Fotoboek","state","getFeed","messageInfo","fetch","method","headers","props","token","body","JSON","stringify","mapId","json","messageIds","messages","map","x","id","checkState","console","log","componentDidMount","then","setState","render","message","index","thumbnail","setOnScreen","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass Fotoboek extends Component {\n\nstate = {'messages':['x']}\n\ncomponentDidMount(props){\n  this.getFeed().then( (messages) => {\n    this.setState({messages:messages})\n    console.log(messages)\n  })\n}\n\ngetFeed = async () =>{\n    let messageInfo = await fetch('https://api.ellipsis-earth.com/v2/geomessage/ids',{method:'POST',  headers: {'Content-Type': 'application/json', 'Authorization': this.props.token}, body:JSON.stringify({'mapId':this.props.mapId, 'type': 'polygon', 'filters':{ 'polygonIds':[15]}})});\n    messageInfo = await messageInfo.json();\n    let messageIds = messageInfo.messages.map((x) =>{return(x.id)})\n    let messages = await fetch('https://api.ellipsis-earth.com/v2/geomessage/get',{method:'POST',  headers: {'Content-Type': 'application/json', 'Authorization': this.props.token}, body:JSON.stringify({'mapId':this.props.mapId, 'type': 'polygon', 'messageIds': messageIds })})\n    messages = await messages.json()\n    return(messages)\n  }\n\n\n\ncheckState = () =>{\n  console.log(this.state)\n}\n\n\n\nrender(){\n  return (\n    <div>\n    <ul>{\n    this.state.messages.map(function(message, index){\n        return(\n          <div>\n          <li key = {index}> {message.message}</li>\n                <img src = {message.thumbnail}/>\n            </div>\n        )\n      })\n    }</ul>\n    <input type=\"button\" value= \"Print state\" onClick = {this.checkState}/>\n    <input type=\"button\" value= \"Ga naar de tuin\" onClick = {this.props.setOnScreen.bind(this,['menu','tuin','chat'])} />\n    </div>\n  );\n}\n}\nexport default Fotoboek;\n"]},"metadata":{},"sourceType":"module"}