{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Projecten/weddingApp/src/components/Tuin.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, Pane, Marker, Popup, Circle, GeoJSON } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nclass Tuin extends Component {\n  constructor(props) {\n    super(props);\n    this.leafletMap = null;\n\n    this.getMarkers = async layer => {\n      let body = {\n        'mapId': this.props.mapId,\n        'layer': layer,\n        'type': 'polygon'\n      };\n      let ids = await fetch('https://api.ellipsis-earth.com/v2/geometry/ids', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': this.props.token\n        },\n        body: JSON.stringify(body)\n      });\n      ids = await ids.json();\n      console.log(ids);\n    };\n\n    this.flyToPos = (pos, zoom = 18) => {\n      let leafletElement = this.leafletMap.current.leafletElement;\n      leafletElement.flyTo(pos, zoom, {\n        'duration': 6\n      });\n    };\n\n    this.leafletMap = React.createRef();\n  }\n\n  componentDidMount() {\n    this.flyToPos([51.98126, 5.82501]);\n    this.getMarkers('ceremonie');\n  }\n\n  render() {\n    let fullStyle = {\n      height: '1000px',\n      width: '1000px'\n    };\n    let tuinPosition = [51.98126, 5.82501];\n    let nlPosition = [52.05249, 5.53711];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: fullStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      center: nlPosition,\n      zoom: 6,\n      style: fullStyle,\n      ref: this.leafletMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://www.google.com/maps/vt?lyrs=y@189&x={x}&y={y}&z={z}\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Pane, {\n      style: {\n        'zIndex': 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      position: [51.505, -0.09],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"U bent hier\")))));\n  }\n\n}\n\n;\nexport default Tuin;","map":{"version":3,"sources":["/home/daniel/Projecten/weddingApp/src/components/Tuin.js"],"names":["React","Component","Map","TileLayer","Pane","Marker","Popup","Circle","GeoJSON","L","Tuin","constructor","props","leafletMap","getMarkers","layer","body","mapId","ids","fetch","method","headers","token","JSON","stringify","json","console","log","flyToPos","pos","zoom","leafletElement","current","flyTo","createRef","componentDidMount","render","fullStyle","height","width","tuinPosition","nlPosition"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACEC,GADF,EAEEC,SAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,OAPF,QAQO,eARP;AASA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,0BAAP;;AAGA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAI3BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,UAEmB,GAFN,IAEM;;AAAA,SAYrBC,UAZqB,GAYT,MAAOC,KAAP,IAAgB;AAC1B,UAAIC,IAAI,GAAG;AAAC,iBAAQ,KAAKJ,KAAL,CAAWK,KAApB;AAA2B,iBAAQF,KAAnC;AAA0C,gBAAO;AAAjD,OAAX;AACA,UAAIG,GAAG,GAAG,MAAMC,KAAK,CAAC,gDAAD,EAAkD;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAiBC,QAAAA,OAAO,EAAE;AAAC,0BAAgB,kBAAjB;AAAqC,2BAAiB,KAAKT,KAAL,CAAWU;AAAjE,SAA1B;AAAmGN,QAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AAAxG,OAAlD,CAArB;AACAE,MAAAA,GAAG,GAAG,MAAMA,GAAG,CAACO,IAAJ,EAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AAED,KAlBoB;;AAAA,SAoBnBU,QApBmB,GAoBR,CAACC,GAAD,EAAMC,IAAI,GAAG,EAAb,KAAoB;AAC7B,UAAIC,cAAc,GAAG,KAAKlB,UAAL,CAAgBmB,OAAhB,CAAwBD,cAA7C;AACAA,MAAAA,cAAc,CAACE,KAAf,CAAqBJ,GAArB,EAA0BC,IAA1B,EAAgC;AAAC,oBAAW;AAAZ,OAAhC;AACD,KAvBkB;;AAGjB,SAAKjB,UAAL,GAAkBb,KAAK,CAACkC,SAAN,EAAlB;AAED;;AAEDC,EAAAA,iBAAiB,GAAG;AACpB,SAAKP,QAAL,CAAc,CAAC,QAAD,EAAU,OAAV,CAAd;AACA,SAAKd,UAAL,CAAgB,WAAhB;AACC;;AAgBDsB,EAAAA,MAAM,GAAE;AACN,QAAIC,SAAS,GAAG;AAAEC,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAAhB;AACA,QAAIC,YAAY,GAAG,CAAC,QAAD,EAAU,OAAV,CAAnB;AACA,QAAIC,UAAU,GAAG,CAAC,QAAD,EAAU,OAAV,CAAjB;AAEA,wBACE;AAAK,MAAA,KAAK,EAAIJ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAEI,UAAb;AAAyB,MAAA,IAAI,EAAE,CAA/B;AAAkC,MAAA,KAAK,EAAEJ,SAAzC;AAAoD,MAAA,GAAG,EAAE,KAAKxB,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,GAAG,EAAC,6DADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAI;AAAC,kBAAS;AAAV,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,CAAC,IAAV,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADA,CAJF,CADA,CADF;AAcD;;AAjD0B;;AAmD5B;AACD,eAAeH,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport {\n  Map,\n  TileLayer,\n  Pane,\n  Marker,\n  Popup,\n  Circle,\n  GeoJSON\n} from 'react-leaflet';\nimport L from 'leaflet'\nimport 'leaflet/dist/leaflet.css';\n\n\nclass Tuin extends Component {\n\n  leafletMap = null\n\n  constructor(props) {\n    super(props);\n\n    this.leafletMap = React.createRef();\n\n  }\n\n  componentDidMount() {\n  this.flyToPos([51.98126,5.82501])\n  this.getMarkers('ceremonie')\n  }\n\ngetMarkers= async (layer) =>{\n  let body = {'mapId':this.props.mapId, 'layer':layer, 'type':'polygon'}\n  let ids = await fetch('https://api.ellipsis-earth.com/v2/geometry/ids',{method:'POST',  headers: {'Content-Type': 'application/json', 'Authorization': this.props.token}, body:JSON.stringify(body)});\n  ids = await ids.json()\n  console.log(ids)\n\n}\n\n  flyToPos = (pos, zoom = 18) => {\n    let leafletElement = this.leafletMap.current.leafletElement\n    leafletElement.flyTo(pos, zoom, {'duration':6});\n  }\n\n\n  render(){\n    let fullStyle = { height: '1000px', width: '1000px' };\n    let tuinPosition = [51.98126,5.82501]\n    let nlPosition = [52.05249,5.53711]\n\n    return(\n      <div style = {fullStyle}>\n      <Map center={nlPosition} zoom={6} style={fullStyle} ref={this.leafletMap}>\n        <TileLayer\n          url='https://www.google.com/maps/vt?lyrs=y@189&x={x}&y={y}&z={z}'\n        />\n        <Pane style = {{'zIndex':100}}>\n        <Marker position={[51.505, -0.09]}>\n          <Popup>U bent hier</Popup>\n        </Marker>\n        </Pane>\n        </Map>\n      </div>\n    )\n  }\n\n};\nexport default Tuin;\n"]},"metadata":{},"sourceType":"module"}